import mariadb
from elasticsearch import Elasticsearch
import urllib3
urllib3.disable_warnings()

mariadb_ = mariadb.connect(
        host='localhost', 
        port= 32100,
        user='root', 
        password= "SlVQOxsghQ", 
        database='my_database')

cursor = mariadb_.cursor()

ElasticClient = Elasticsearch(
        "http://localhost:53608/",
        basic_auth=("elastic","Gu6cigeirVvLXZAa")
    )

def crearBase():
    try:
        cursor.execute("CREATE DATABASE IF NOT EXISTS pruebaUnitaria")
    except:
        print("Error en crear base en Maria")

def crearIndiceYMapear():
    try:
        mappings = {
        "mappings": {
            "properties": {
            "rel_date": {
                "type": "text"
            }
            }
        }
        }
        ElasticClient.indices.create(index='articulos', body=mappings)
    except:
        print("Error en crear indice")

def insertarArticulos():
    data = {
        "rel_doi": "10.1101/2022.11.05.22281734",
        "rel_title": "",
        "rel_date": "2022-11-13",
        "rel_site": "medRxiv",
        "rel_link": "https://medrxiv.org/cgi/content/short/2022.11.05.22281734",
        "rel_abs": "EPA recommends DIY air cleaners for temporary use during wildfires, and a recent EPA study reported inconsistent usage in homes due to excessive noise. Questions also remain about wear and tear including how long filters retain their filtration properties and need to be replaced. Herein we report real-world experience from daily usage of 47 HEPA and 60 DIY air cleaners in a California elementary school during the academic school year from spring 2021 through fall of 2022 across 16 classrooms, a library, an auditorium, a lunchroom, and in a hallway. Three to six purifiers were needed in classrooms to meet California (CDPH) recommended 6 to 12 air changes per hour (ACH) for prevention of aerosol transmission of COVID-19 in classrooms. Teachers reported noise generated by DIY purifiers on lowest fan speed as acceptable for classroom use. Filtration efficiency at 0.3 m (most penetrating particle size) for DIY air cleaners with 5\" MERV 16 filters used in the classrooms averages 77% after six months compared to 92% for newly installed filters. Portable air cleaners (HEPA and DIY) averaged and estimated 10 ACH (6-15 ACH) across the 16 classrooms demonstrating feasibility and unit economics of meeting CDPH targets per classroom for $200-$650 with DIY versus $600-$12,000 with the HEPA models used. In one 9000 cubic foot classroom with 7 air purifiers, air exchange rate was measured using ambient aerosols at 18 ACH from air purifiers (within 20% of ACH estimated based on CADR of purifiers) and 7 ACH from HVAC for a combined total of 25 ACH. The procedure using ambient aerosols to verify ACH from portable air cleaners and HVAC can be the basis for ACH certification or verification without generating aerosol contaminants (e.g. salt water, smoke, tracers) which may be unsafe or disallowed in schools.",
        "rel_num_authors": 1,
        "rel_authors": [
            {
                "author_name": "Devabhaktuni Srikrishna",
                "author_inst": "Patient Knowhow, Inc."
            }
        ],
        "version": "1",
        "license": "cc_by_nd",
        "type": "PUBLISHAHEADOFPRINT",
        "category": "infectious diseases",
        "details" : {
            "jatsxml" : {
                "something" : "something"
            }
        }
    }
    try:
        control = 0
        while control != 200:
            data["rel_title"] = "titulo "+str(control)
            ElasticClient.index(index='articulos', document=data)
            control += 1
    except:
        print("Error en insertar datos")

def seleccion():
    print("--- Para la prueba unitaria debe seguir el orden---")
    print("1: Crear base de datos en MAriaDB")
    print("2: Crear indice en Elastic y mapear")
    print("3: Insertar 200 articulos en Elastic")
    print("4: Ejecutar todo lo anterior")
    print("5: Salir")
    print("")
    var = input('Seleccionar un numero: ')
    control = int(var)

    if control == 1:
        crearBase()
    elif control == 2:
        crearIndiceYMapear()
    elif control == 3:
        insertarArticulos()
    elif control == 4:
        crearBase()
        crearIndiceYMapear()
        insertarArticulos()
        seleccion()
    elif control == 5:
        return
    else:
        print("Digite una opcion correcta")
        print("")
        seleccion()

seleccion()
